version: '3.9'
services:
  frontend:
    build: ./frontend
    platform: linux/x86_64
    container_name: app_frontend
    volumes:
      - './frontend:/frontend'
    ports:
      - ${PORT_FRONTEND}:3000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]
      timeout: 10s
      retries: 5

  backend:
    build: ./backend
    container_name: app_backend
    ports:
      - ${PORT}:3003
    platform: linux/x86_64
    command: npm run dev
    volumes:
      - './backend:/app'
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_NAME=${MYSQL_NAME}
      - MYSQL_PORT=${MYSQL_PORT}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3003"]
      timeout: 10s
      retries: 5
  mysql:
    image: mysql:8.0.21
    container_name: mysql_db
    platform: linux/x86_64
    ports:
      - 3002:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      timeout: 10s
      retries: 5